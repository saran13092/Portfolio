{"ast":null,"code":"import { Breakpoints } from '@angular/cdk/layout';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nexport let ResponsiveDirective = /*#__PURE__*/(() => {\n  var _class;\n  class ResponsiveDirective {\n    constructor(element, breakPointObserver) {\n      this.element = element;\n      this.breakPointObserver = breakPointObserver;\n      this.breakPointObserver.observe([Breakpoints.HandsetPortrait, Breakpoints.WebLandscape]).subscribe({\n        next: result => {\n          for (let breakpoint of Object.keys(result.breakpoints)) {\n            if (result.breakpoints[breakpoint]) {\n              if (breakpoint === Breakpoints.HandsetPortrait) {\n                this.element.nativeElement.classList.remove('pc');\n              }\n              if (breakpoint === Breakpoints.WebLandscape) {\n                this.element.nativeElement.classList.add('pc');\n              }\n            }\n          }\n        }\n      });\n    }\n  }\n  _class = ResponsiveDirective;\n  _class.ɵfac = function ResponsiveDirective_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n  };\n  _class.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: _class,\n    selectors: [[\"\", \"Responsive\", \"\"]]\n  });\n  return ResponsiveDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}